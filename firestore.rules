rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is the owner
    function isOwner() {
      return isAuthenticated() && request.auth.uid == 'jBa71VgYp0Qz782bawa4SgjHu1l1';
    }

    // Concert entries from the form
    match /concerts/{concertId} {
      // Only owner can create concerts
      allow create: if isOwner();
      // Everyone can read concerts
      allow read: if true;
      // Only owner can update/delete concerts
      allow update, delete: if isOwner();
    }

    // Personal notes - only owner can read/write
    match /concert_notes/{concertId} {
      // Only owner can create, read, update, or delete notes
      allow create, read, update, delete: if isOwner();
    }

    // Comments - authenticated users can read and create, only comment author can delete
    match /concert_comments/{commentId} {
      // Everyone can read comments
      allow read: if true;
      // Authenticated users can create comments
      allow create: if isAuthenticated()
                    && request.resource.data.user_id == request.auth.uid
                    && request.resource.data.user_name == request.auth.token.name
                    && request.resource.data.user_photo == request.auth.token.picture;
      // Users can only delete their own comments, or owner can delete any comment
      allow delete: if isAuthenticated()
                    && (resource.data.user_id == request.auth.uid || isOwner());
      // Comments cannot be updated (no editing)
      allow update: if false;
    }

    // Pending setlist submissions - anyone can create, only owner can read/update/delete
    match /pending_setlist_submissions/{submissionId} {
      // Owner can read all submissions, or anyone can list to check for duplicates
      allow read: if isOwner();
      allow list: if true;  // Allow anyone to query for existing submissions
      // Anyone can create a submission (even anonymous users)
      allow create: if true;
      // Only owner can update status or delete submissions
      allow update, delete: if isOwner();
    }
  }
}
